{"version":3,"file":"static/js/Rolls.da0bbf4c.chunk.js","mappings":"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","sources":["webpack://rise-of-rice/./src/components/Categories/Categories.module.scss?b20d","components/Categories/Categories.tsx","webpack://rise-of-rice/./src/components/Sort/Sort.module.scss?97c5","components/Sort/Sort.tsx","webpack://rise-of-rice/./src/components/RollBlock/RollBlock.module.scss?ce17","components/RollBlock/RollBlock.tsx","components/RollBlock/Skeleton.tsx","webpack://rise-of-rice/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.tsx","webpack://rise-of-rice/./src/components/ContentError/ContentError.module.scss?7a4e","components/ContentError/ContentError.tsx","webpack://rise-of-rice/./src/pages/Rolls/Rolls.module.scss?13e7","pages/Rolls/Rolls.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"categories\":\"Categories_categories__QVSOV\",\"active\":\"Categories_active__yuIOs\"};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCategoryId } from '../../redux/Filter/slice';\r\nimport { RootState } from '../../redux/store';\r\n\r\nimport styles from './Categories.module.scss';\r\n\r\nlet categories = ['Все', 'Запеченные', 'Холодные', 'Жареные'];\r\n\r\nconst Categories: React.FC = React.memo(() => {\r\n  let categoryId = useSelector((state: RootState) => state.filterReducer.categoryId);\r\n  let dispatch = useDispatch();\r\n\r\n  let onChangeCategory = (index: number) => {\r\n    dispatch(setCategoryId(index));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.categories}>\r\n      <ul>\r\n        {categories.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={item}\r\n              onClick={() => onChangeCategory(index)}\r\n              className={categoryId === index ? `${styles.active}` : ''}>\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Categories;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sort\":\"Sort_sort__6K4DB\",\"sortLabel\":\"Sort_sortLabel__j9vjo\",\"open\":\"Sort_open__Op3mC\",\"sortLabelRanking\":\"Sort_sortLabelRanking__2v4nU\",\"activeButton\":\"Sort_activeButton__qtKQ+\",\"sortPopup\":\"Sort_sortPopup__5dYtK\",\"active\":\"Sort_active__5Kld8\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setSort } from '../../redux/Filter/slice';\r\nimport { SortType } from '../../redux/Filter/types';\r\n\r\nimport styles from './Sort.module.scss';\r\n\r\ntype PropsOrderType = {\r\n  value: SortType,\r\n  orderType: string,\r\n  setOrderType: (orderType: string) => void,\r\n};\r\n\r\nexport let list: SortType[] = [\r\n  { name: 'популярности', sortProperty: 'rating' },\r\n  { name: 'цене', sortProperty: 'price' },\r\n  { name: 'алфавиту', sortProperty: 'title' },\r\n];\r\n\r\nconst Sort: React.FC<PropsOrderType> = React.memo(({ value, orderType, setOrderType }) => {\r\n  let dispatch = useDispatch();\r\n\r\n  let sortRef = React.useRef<HTMLDivElement>(null);\r\n  //Попап сортировки(открыть - закрыть)\r\n  let [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  let onClickListItem = (obj: SortType) => {\r\n    dispatch(setSort(obj));\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    let handleClickOutside = (event: MouseEvent) => {\r\n      if (sortRef.current && !event.composedPath().includes(sortRef.current)) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.body.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className={styles.sort}>\r\n      <div className={styles.sortLabel}>\r\n        <svg\r\n          className={open ? `${styles.open}` : ''}\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Сортировка по:</b>\r\n        <span onClick={() => setOpen(!open)}>{value.name}</span>\r\n        <div className={styles.sortLabelRanking}>\r\n          <button\r\n            className={orderType === 'asc' ? styles.activeButton : ''}\r\n            onClick={() => setOrderType('asc')}>\r\n            ↑\r\n          </button>\r\n          <button\r\n            className={orderType === 'desc' ? styles.activeButton : ''}\r\n            onClick={() => setOrderType('desc')}>\r\n            ↓\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {open && (\r\n        <div className={styles.sortPopup}>\r\n          <ul>\r\n            {list.map((obj, index) => (\r\n              <li\r\n                key={index}\r\n                onClick={() => onClickListItem(obj)}\r\n                className={value.sortProperty === obj.sortProperty ? 'active' : ''}>\r\n                {obj.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Sort;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RollBlock_wrapper__5Nm2O\",\"rollBlock\":\"RollBlock_rollBlock__UzMZP\",\"rollBlockImage\":\"RollBlock_rollBlockImage__GlsKw\",\"rollBlockTitle\":\"RollBlock_rollBlockTitle__UZbad\",\"rollBlockDescription\":\"RollBlock_rollBlockDescription__n3LgU\",\"rollBlockSelector\":\"RollBlock_rollBlockSelector__9KhPq\",\"active\":\"RollBlock_active__xFwJd\",\"rollBlockBottom\":\"RollBlock_rollBlockBottom__6d0PA\",\"rollBlockPrice\":\"RollBlock_rollBlockPrice__bGzQJ\",\"addProduct\":\"RollBlock_addProduct__zhQPs\",\"addInCart\":\"RollBlock_addInCart__XeYv9\",\"buttonMinus\":\"RollBlock_buttonMinus__OHiEW\",\"buttonPlus\":\"RollBlock_buttonPlus__biB4k\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addItem, minusItem, removeItem } from '../../redux/Cart/slice';\r\nimport { CartItemType } from '../../redux/Cart/types';\r\nimport { RootState } from '../../redux/store';\r\n\r\nimport styles from './RollBlock.module.scss'\r\n\r\nlet typeNames = ['мини', 'стандарт'];\r\n\r\ntype RollBlockProps = {\r\n  id: string;\r\n  title: string;\r\n  structure: string;\r\n  price: number[];\r\n  imageUrl: string;\r\n  types: number[];\r\n}\r\n\r\nconst RollBlock: React.FC<RollBlockProps> = ({ id, title, structure, price, imageUrl, types }) => {\r\n  let dispatch = useDispatch();\r\n  let [activeType, setActiveType] = React.useState<number>(0);\r\n\r\n  let cartItem = useSelector((state: RootState) =>\r\n    state.cartReducer.items.find((obj) => obj.id === id && obj.type === typeNames[activeType]),\r\n  );\r\n\r\n  let addedCount = cartItem ? cartItem.count : 0;\r\n\r\n  let onClickPlusItem = () => {\r\n    let item: CartItemType = {\r\n      id,\r\n      title,\r\n      price: price[activeType],\r\n      imageUrl,\r\n      type: typeNames[activeType],\r\n      count: 0\r\n    };\r\n    dispatch(addItem(item));\r\n  };\r\n\r\n  let onClickMinusItem = () => {\r\n    let item: CartItemType = {\r\n      id,\r\n      title,\r\n      price: price[activeType],\r\n      imageUrl,\r\n      type: typeNames[activeType],\r\n      count: 0\r\n    };\r\n    dispatch(addItem(item));\r\n    if (addedCount === 1) {\r\n      dispatch(removeItem(item));\r\n    } else {\r\n      dispatch(minusItem(item));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.rollBlock}>\r\n        <Link to={`roll/${id}`}>\r\n          <img className={styles.rollBlockImage} src={imageUrl} alt=\"Roll\" />\r\n          <h4 className={styles.rollBlockTitle}>{title}</h4>\r\n        </Link>\r\n        <div className={styles.rollBlockDescription}>\r\n          <p>{structure}</p>\r\n        </div>\r\n        <div className={styles.rollBlockSelector}>\r\n          <ul>\r\n            {types.map((type, index) => (\r\n              <li\r\n                onClick={() => setActiveType(type)}\r\n                className={activeType === index ? `${styles.active}` : ''}\r\n                key={index}>\r\n                {typeNames[type]}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className={styles.rollBlockBottom}>\r\n          <div className={styles.rollBlockPrice}>{price[activeType]} ₽</div>\r\n          <div className={styles.addProduct}>\r\n            {addedCount > 0 &&\r\n              <React.Fragment>\r\n                <button\r\n                  onClick={onClickMinusItem}\r\n                  className={styles.buttonMinus}>\r\n                  <svg\r\n                    width=\"10\"\r\n                    height=\"10\"\r\n                    viewBox=\"0 0 10 10\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                      d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                      fill=\"#EB5A1E\"\r\n                    />\r\n                    <path\r\n                      d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                      fill=\"#EB5A1E\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <b>{addedCount}</b>\r\n              </React.Fragment>\r\n              }   \r\n              <button\r\n                onClick={onClickPlusItem}\r\n                className={styles.buttonPlus}>\r\n                <svg\r\n                  width=\"10\"\r\n                  height=\"10\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                    fill=\"#EB5A1E\"\r\n                  />\r\n                  <path\r\n                    d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                    fill=\"#EB5A1E\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RollBlock;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nimport styles from './RollBlock.module.scss'\r\n\r\nconst Skeleton: React.FC = () => (\r\n  <ContentLoader\r\n    className={styles.wrapper}\r\n    speed={2}\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    viewBox=\"0 0 280 500\"\r\n    backgroundColor=\"#f3f3f3\"\r\n    foregroundColor=\"#ecebeb\">\r\n    <rect x=\"0\" y=\"293\" rx=\"10\" ry=\"10\" width=\"280\" height=\"23\" /> \r\n    <rect x=\"0\" y=\"340\" rx=\"10\" ry=\"10\" width=\"280\" height=\"50\" /> \r\n    <rect x=\"0\" y=\"455\" rx=\"10\" ry=\"10\" width=\"95\" height=\"30\" /> \r\n    <rect x=\"10\" y=\"0\" rx=\"30\" ry=\"30\" width=\"260\" height=\"260\" /> \r\n    <circle cx=\"263\" cy=\"466\" r=\"18\" /> \r\n    <rect x=\"0\" y=\"410\" rx=\"10\" ry=\"10\" width=\"144\" height=\"35\" />\r\n  </ContentLoader>\r\n);\r\n\r\nexport default Skeleton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paginate\":\"Pagination_paginate__NQL+8\"};","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport styles from './Pagination.module.scss';\r\n\r\ntype PaginationProps = {\r\n  onChangePage: (page: number) => void;\r\n  countRolls: number;\r\n  itemsPerPage: number;\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({ onChangePage, countRolls, itemsPerPage }) => {\r\n  return (\r\n    <ReactPaginate\r\n      className={styles.paginate}\r\n      breakLabel=\"...\"\r\n      nextLabel=\">\"\r\n      previousLabel=\"<\"\r\n      onPageChange={(event) => onChangePage(event.selected + 1)}\r\n      pageRangeDisplayed={itemsPerPage}\r\n      pageCount={Math.ceil(countRolls / itemsPerPage)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ContentError_root__WG-Zf\"};","import React from 'react';\r\n\r\nimport styles from './ContentError.module.scss';\r\n\r\nconst ContentError: React.FC = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <h2>Произошла ошибка 😕</h2>\r\n      <p>к сожалению, не удалось получить роллы</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentError;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Rolls_container__r0kPN\",\"contentTop\":\"Rolls_contentTop__xsWV+\",\"contentTitle\":\"Rolls_contentTitle__n6SKr\",\"contentItems\":\"Rolls_contentItems__Yo9tW\",\"contentItemsNotInfo\":\"Rolls_contentItemsNotInfo__K5sWt\",\"nothingFound\":\"Rolls_nothingFound__R26HX\"};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Categories from '../../components/Categories/Categories';\r\nimport Sort from '../../components/Sort/Sort';\r\nimport RollBlock from '../../components/RollBlock/RollBlock';\r\nimport Skeleton from '../../components/RollBlock/Skeleton';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\nimport ContentError from '../../components/ContentError/ContentError';\r\n\r\nimport { setCurrentPageCount, setFilters } from '../../redux/Filter/slice';\r\nimport { SearchRollParamsType } from '../../redux/Filter/types'\r\nimport { fetchRoll } from '../../redux/Roll/asyncActions';\r\nimport { RootState, useAppDispatch } from '../../redux/store';\r\nimport { RollType } from '../../redux/Roll/types';\r\n\r\nimport styles from './Rolls.module.scss';\r\n\r\nconst Rolls: React.FC = () => {\r\n  //Состояние filterReducer\r\n  let { searchValue, categoryId, currentPage, sort } = useSelector((state: RootState) => state.filterReducer);\r\n  //Состояние rollReducer\r\n  let { items, countRolls, status } = useSelector((state: RootState) => state.rollReducer);\r\n\r\n  let navigate = useNavigate();\r\n  let dispatch = useAppDispatch();\r\n\r\n  //Флаг - (есть или нет) что-то в адресной строке\r\n  let isSearch = React.useRef<boolean>(false);\r\n  //Флаг первого монтирования компонента\r\n  let isMounted = React.useRef<boolean>(false);\r\n\r\n  //По возрастанию - по убыванию\r\n  let [orderType, setOrderType] = React.useState<string>('asc');\r\n\r\n  //Количество товаров отоброжаемых на главной странице\r\n  let itemsPerPage = 8;\r\n\r\n  //Функция выбора отображаемой страницы\r\n  let onChangePage = (page: number) => {\r\n    dispatch(setCurrentPageCount(page));\r\n  };\r\n\r\n  //Вшивает параметры из состояния (категории, сортировка) в адресную строку\r\n  React.useEffect(() => {\r\n    if (isMounted.current) {\r\n      let queryString = qs.stringify({\r\n        sortProperty: sort.sortProperty,\r\n        categoryId,\r\n        currentPage,\r\n      });\r\n      navigate(`?${queryString}`);\r\n    }\r\n    isMounted.current = true;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryId, sort, orderType, currentPage, searchValue]);\r\n\r\n  //При первом рендере (если в адресной строке что-то есть) берет параметры из адресной строки и меняет состояние\r\n  React.useEffect(() => {\r\n    if (window.location.search) {\r\n      let params = qs.parse(window.location.search.slice(1)) as SearchRollParamsType;\r\n\r\n      dispatch(\r\n        setFilters({\r\n          ...params,\r\n        }),\r\n      );\r\n      isSearch.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (!isSearch.current) {\r\n      let category = categoryId > 0 ? `category=${categoryId}` : '';\r\n      let search = searchValue ? `&search=${searchValue}` : '';\r\n\r\n      dispatch(\r\n        fetchRoll({\r\n          currentPage,\r\n          itemsPerPage,\r\n          category,\r\n          sort: sort.sortProperty,\r\n          orderType,\r\n          search,\r\n        }),\r\n      );\r\n    }\r\n\r\n    isSearch.current = false;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categoryId, sort, orderType, currentPage, searchValue]);\r\n\r\n  let rolls = items.map((item: RollType) => <RollBlock key={item.title} {...item} />);\r\n\r\n  let skeletons = [...new Array(10)].map((item, index) => <Skeleton key={index} />);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.contentTop}>\r\n        <Categories />\r\n        <Sort\r\n          value={sort}\r\n          orderType={orderType}\r\n          setOrderType={setOrderType}\r\n        />\r\n      </div>\r\n      <h2 className={styles.contentTitle}>РОЛЛЫ</h2>\r\n      {status === 'error' ? (\r\n        <ContentError />\r\n      ) : (\r\n        <div className={status === 'success' && (searchValue.length > 0 && items.length === 0) ? `${styles.contentItemsNotInfo}` : styles.contentItems}>\r\n          {status === 'loading' ? skeletons : (\r\n          searchValue.length > 0 && items.length === 0 ? <h2 className={styles.nothingFound}>Ничего не найдено 😕</h2> : rolls)}\r\n        </div>\r\n      )}\r\n      <div style={status === 'success' && (searchValue.length > 0 && items.length === 0) ? {visibility: \"hidden\"} : {visibility: \"visible\"}}>\r\n        <Pagination onChangePage={onChangePage} countRolls={countRolls} itemsPerPage={itemsPerPage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rolls;\r\n"],"names":["categories","React","categoryId","useSelector","state","filterReducer","dispatch","useDispatch","className","styles","map","item","index","onClick","setCategoryId","onChangeCategory","list","name","sortProperty","value","orderType","setOrderType","sortRef","open","setOpen","handleClickOutside","event","current","composedPath","includes","document","body","addEventListener","removeEventListener","ref","width","height","viewBox","fill","xmlns","d","obj","setSort","onClickListItem","typeNames","id","title","structure","price","imageUrl","types","activeType","setActiveType","cartItem","cartReducer","items","find","type","addedCount","count","to","src","alt","addItem","removeItem","minusItem","speed","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","onChangePage","countRolls","itemsPerPage","breakLabel","nextLabel","previousLabel","onPageChange","selected","pageRangeDisplayed","pageCount","Math","ceil","searchValue","currentPage","sort","rollReducer","status","navigate","useNavigate","useAppDispatch","isSearch","isMounted","queryString","qs","window","location","search","params","slice","setFilters","scrollTo","category","fetchRoll","rolls","skeletons","Array","length","style","visibility","page","setCurrentPageCount"],"sourceRoot":""}